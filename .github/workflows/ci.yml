name: CI/CD Pipeline

on:
  push:
    branches: [main, master, develop]
  pull_request:
    branches: [main, master, develop]

jobs:
  test:
    name: Test Suite
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: ["22.17.0"]

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: test_user
          POSTGRES_PASSWORD: test_password
          POSTGRES_DB: test_wallround
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "yarn"

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Setup test database
        env:
          DATABASE_URL: postgresql://test_user:test_password@localhost:5432/test_wallround
        run: |
          yarn prisma generate
          yarn db:deploy
          yarn db:push
          yarn db:seed

      - name: Run type checking
        run: yarn lint

      - name: Run tests
        env:
          DATABASE_URL: postgresql://test_user:test_password@localhost:5432/test_wallround
          NODE_ENV: test
        run: yarn test:coverage

      - name: Upload coverage reports
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage/lcov.info
          flags: unittests
          name: codecov-umbrella

  # build:
  #   name: Build Check
  #   runs-on: ubuntu-latest
  #   needs: test

  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v4

  #     - name: Setup Node.js
  #       uses: actions/setup-node@v4
  #       with:
  #         node-version: "23.x"
  #         cache: "yarn"

  #     - name: Install dependencies
  #       run: yarn install --frozen-lockfile

  #     - name: Build project
  #       run: yarn build

  #     - name: Check build artifacts
  #       run: |
  #         if [ ! -d "dist" ]; then
  #           echo "Build failed: dist directory not found"
  #           exit 1
  #         fi
  #         echo "Build successful!"

  # security:
  #   name: Security Audit
  #   runs-on: ubuntu-latest

  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v4

  #     - name: Setup Node.js
  #       uses: actions/setup-node@v4
  #       with:
  #         node-version: "23.x"
  #         cache: "yarn"

  #     - name: Install dependencies
  #       run: yarn install --frozen-lockfile

  #     - name: Run security audit
  #       run: yarn audit --level moderate

  #     - name: Check for vulnerabilities
  #       run: yarn audit --level high
